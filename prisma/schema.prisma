generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  phone           String
  email           String            @unique
  password        String
  image           String?
  age             String
  access          String
  created_at      DateTime          @default(now())
  update_at       DateTime          @default(now())
  RelationsAdress RelationsAdress[]

  @@map("users")
}

model Adress {
  id                 String            @id @default(uuid())
  street             String
  city               String
  state              String
  cep                String
  number             String
  district           String
  apartment_or_house String
  created_at         DateTime          @default(now())
  update_at          DateTime          @default(now())
  RelationsAdress    RelationsAdress[]

  @@map("adresses")
}

model RelationsAdress {
  id        String @id @default(uuid())
  id_user   String
  id_adress String
  adress2   Adress @relation(fields: [id_adress], references: [id])
  user      User   @relation(fields: [id_user], references: [id])

  @@map("relationsAdress")
}

model Category {
  id                  String             @id @default(uuid())
  image               String
  name                String
  products_categories Product_Category[]

  @@map("categories")
}

model Product {
  id                   String                 @id @default(uuid())
  name                 String
  bar_code             String
  price                String
  frete                String
  image                String[]
  size                 String[]
  color                String[]
  slug                 String[]
  description          String
  quantity             String
  url_product          String
  created_at           DateTime               @default(now())
  comprarealations     CompraRealations[]
  products_categories  Product_Category[]
  comentariorealations ComentarioRealations[]
}

model Product_Category {
  id          String   @id @default(uuid())
  id_product  String
  id_category String
  categories  Category @relation(fields: [id_category], references: [id])
  products    Product  @relation(fields: [id_product], references: [id])

  @@map("product_categories")
}

model Compra {
  id                 String             @id @default(uuid())
  name               String
  phone              String
  email              String
  street             String
  city               String
  state              String
  cep                String
  number             String
  district           String
  apartment_or_house String
  created_at         DateTime           @default(now())
  update_at          DateTime           @default(now())
  code_compra        String
  productName        String
  productPrice       String
  productImage       String
  productSize        String
  productClolor      String
  productQuantity    String
  productUrl         String
  comprarealations   CompraRealations[]

  @@map("compra")
}

model Compra1 {
  id                 String   @id @default(uuid())
  name               String
  phone              String
  email              String
  street             String
  city               String
  state              String
  cep                String
  number             String
  district           String
  apartment_or_house String
  created_at         DateTime @default(now())
  update_at          DateTime @default(now())
  code_compra        String
  productName        String
  productPrice       String
  productImage       String
  productSize        String
  productClolor      String
  productQuantity    String
  productUrl         String

  @@map("compra1")
}

model Compra2 {
  id                 String   @id @default(uuid())
  name               String
  phone              String
  email              String
  street             String
  city               String
  state              String
  cep                String
  number             String
  district           String
  apartment_or_house String
  created_at         DateTime @default(now())
  update_at          DateTime @default(now())
  code_compra        String
  productName        String
  productPrice       String
  productImage       String
  productSize        String
  productClolor      String
  productQuantity    String
  productUrl         String

  @@map("compra2")
}

model Compra3 {
  id                 String   @id @default(uuid())
  name               String
  phone              String
  email              String
  street             String
  city               String
  state              String
  cep                String
  number             String
  district           String
  apartment_or_house String
  created_at         DateTime @default(now())
  update_at          DateTime @default(now())
  code_compra        String
  productName        String
  productPrice       String
  productImage       String
  productSize        String
  productClolor      String
  productQuantity    String
  productUrl         String

  @@map("compra3")
}

model Compra4 {
  id                 String   @id @default(uuid())
  name               String
  phone              String
  email              String
  street             String
  city               String
  state              String
  cep                String
  number             String
  district           String
  apartment_or_house String
  created_at         DateTime @default(now())
  update_at          DateTime @default(now())
  code_compra        String
  productName        String
  productPrice       String
  productImage       String
  productSize        String
  productClolor      String
  productQuantity    String
  productUrl         String

  @@map("compra4")
}

model CompraRealations {
  id          String  @id @default(uuid())
  id_products String
  id_compra   String
  compra      Compra  @relation(fields: [id_compra], references: [id])
  product     Product @relation(fields: [id_products], references: [id])

  @@map("comprarealations")
}

model Promocao {
  id         String   @id @default(uuid())
  promocao   String[]
  created_at DateTime @default(now())
  update_at  DateTime @default(now())

  @@map("promocao")
}

model Ofertas {
  id         String   @id @default(uuid())
  ofertas    String[]
  created_at DateTime @default(now())
  update_at  DateTime @default(now())

  @@map("ofertas")
}

model Slids {
  id         String   @id @default(uuid())
  slids      String[]
  created_at DateTime @default(now())
  update_at  DateTime @default(now())

  @@map("slids")
}

model Bannes {
  id         String   @id @default(uuid())
  bannes     String[]
  created_at DateTime @default(now())
  update_at  DateTime @default(now())

  @@map("bannes")
}

model Comentarios {
  id                   String                 @id @default(uuid())
  imgName              String
  image                String[]
  name                 String
  message              String
  estrela              String
  idProduct            String
  created_at           DateTime               @default(now())
  update_at            DateTime               @default(now())
  comentariorealations ComentarioRealations[]

  @@map("comentarios")
}

model ComentarioRealations {
  id            String      @id @default(uuid())
  id_product    String
  id_comentario String
  comentarios   Comentarios @relation(fields: [id_comentario], references: [id])
  product       Product     @relation(fields: [id_product], references: [id])

  @@map("comentariorealations")
}

model Favorito {
  id          String   @id @default(uuid())
  name        String
  bar_code    String[]
  price       String
  image       String[]
  size        String[]
  color       String[]
  slug        String[]
  description String
  quantity    String
  url_product String
  created_at  DateTime @default(now())
  update_at   DateTime @default(now())

  @@map("favorito")
}
